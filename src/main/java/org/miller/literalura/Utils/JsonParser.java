package org.miller.literalura.Utils;import com.fasterxml.jackson.core.JsonProcessingException;import com.fasterxml.jackson.databind.JsonNode;import com.fasterxml.jackson.databind.ObjectMapper;import com.fasterxml.jackson.databind.node.ArrayNode;import org.miller.literalura.Model.LibroRecord;import org.springframework.stereotype.Service;import java.util.ArrayList;import java.util.List;@Servicepublic class JsonParser {    private ObjectMapper objectMapper = new ObjectMapper();    public LibroRecord parseLibro(String json) {        try {            return objectMapper.readValue(json, LibroRecord.class);        } catch (JsonProcessingException e) {            throw new RuntimeException(e);        }    }    public List<LibroRecord> parseLibros(String json) {        List<LibroRecord> listaLibro = new ArrayList<>();        try {            JsonNode jsonObject = objectMapper.readTree(json);            JsonNode resultsNode = jsonObject.get("results");            for (JsonNode node : (ArrayNode) resultsNode) {                LibroRecord libro = objectMapper.treeToValue(node, LibroRecord.class);                listaLibro.add(libro);            }            return listaLibro;        } catch (JsonProcessingException e) {            throw new RuntimeException(e);        }    }}